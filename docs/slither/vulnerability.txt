'npx hardhat clean' running (wd: /Users/john/eco/currency-1.5)
'npx hardhat clean --global' running (wd: /Users/john/eco/currency-1.5)
'npx hardhat compile --force' running (wd: /Users/john/eco/currency-1.5)
INFO:Detectors:
CommunityGovernance.nextCycle() (contracts/governance/community/CommunityGovernance.sol#305-336) uses a weak PRNG: "cycleTime = elapsed % CYCLE_LENGTH (contracts/governance/community/CommunityGovernance.sol#315)" 
CurrencyGovernance.getCurrentStage() (contracts/governance/monetary/CurrencyGovernance.sol#412-424) uses a weak PRNG: "governanceTime = timeDifference % CYCLE_LENGTH (contracts/governance/monetary/CurrencyGovernance.sol#415)" 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#weak-PRNG
INFO:Detectors:
Policy.enact(address) (contracts/policy/Policy.sol#94-107) uses delegatecall to a input-controlled function id
	- (_success,returndata) = proposal.delegatecall(abi.encodeWithSignature(enacted(address),proposal)) (contracts/policy/Policy.sol#96-98)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#controlled-delegatecall
INFO:Detectors:
CommunityGovernance.propose(Proposal) (contracts/governance/community/CommunityGovernance.sol#344-364) ignores return value by ecoToken.transferFrom(msg.sender,address(this),proposalFee) (contracts/governance/community/CommunityGovernance.sol#358)
CommunityGovernance.refund(address) (contracts/governance/community/CommunityGovernance.sol#581-597) ignores return value by ecoToken.transfer(proposer,propRefund) (contracts/governance/community/CommunityGovernance.sol#586)
CommunityGovernance.sweep(address) (contracts/governance/community/CommunityGovernance.sol#604-608) ignores return value by ecoToken.transfer(recipient,pot) (contracts/governance/community/CommunityGovernance.sol#605)
Lockups._deposit(uint256,address,uint256) (contracts/governance/monetary/Lockups.sol#182-221) ignores return value by eco.transferFrom(_beneficiary,address(this),_amount) (contracts/governance/monetary/Lockups.sol#192)
Lockups._withdraw(uint256,address) (contracts/governance/monetary/Lockups.sol#239-272) ignores return value by eco.transfer(_recipient,amount) (contracts/governance/monetary/Lockups.sol#265)
Lockups.sweep(address) (contracts/governance/monetary/Lockups.sol#322-325) ignores return value by eco.transfer(_destination,penalties / currentInflationMultiplier) (contracts/governance/monetary/Lockups.sol#323)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer
INFO:Detectors:
VotingPower.totalECOxSnapshot (contracts/governance/community/VotingPower.sol#14) is never initialized. It is used in:
	- VotingPower.totalVotingPower() (contracts/governance/community/VotingPower.sol#40-44)
VotingPower.excludedVotingPower (contracts/governance/community/VotingPower.sol#17) is never initialized. It is used in:
	- VotingPower.totalVotingPower() (contracts/governance/community/VotingPower.sol#40-44)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-state-variables
INFO:Detectors:
CommunityGovernance.feeRefund (contracts/governance/community/CommunityGovernance.sol#81) should be constant 
CommunityGovernance.proposalFee (contracts/governance/community/CommunityGovernance.sol#78) should be constant 
CommunityGovernance.supportThresholdPercent (contracts/governance/community/CommunityGovernance.sol#84) should be constant 
CommunityGovernance.voteThresholdPercent (contracts/governance/community/CommunityGovernance.sol#87) should be constant 
DummyLever.alwaysPassFunctionSignature (contracts/test/DummyLever.sol#14-15) should be constant 
DummyLever.alwaysRevertFunctionSignature (contracts/test/DummyLever.sol#18-19) should be constant 
DummyLever.datalessPasserFunctionSignature (contracts/test/DummyLever.sol#16-17) should be constant 
DummyLever.executeFunctionSignature (contracts/test/DummyLever.sol#12-13) should be constant 
DummyLever.veryExpensiveFunctionSignature (contracts/test/DummyLever.sol#20-21) should be constant 
VotingPower.excludedVotingPower (contracts/governance/community/VotingPower.sol#17) should be constant 
VotingPower.totalECOxSnapshot (contracts/governance/community/VotingPower.sol#14) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
INFO:Detectors:
Lockups.depositWindow (contracts/governance/monetary/Lockups.sol#55) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:. analyzed (54 contracts with 32 detectors), 23 result(s) found
